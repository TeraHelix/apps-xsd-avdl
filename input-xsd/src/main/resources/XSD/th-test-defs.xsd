<?xml version="1.0" encoding="utf-8"?>

<xsd:schema
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.terahelix.io/XSD-Test"
	targetNamespace="http://schemas.terahelix.io/XSD-Test"
	elementFormDefault="qualified" 
	attributeFormDefault="qualified">

	<xsd:complexType name="AbstractVehicleContainer" abstract="true">
		  <xsd:annotation>
      		<xsd:documentation xml:lang="en">This is an abstract vehicle container object.</xsd:documentation>
    	</xsd:annotation>
    	<xsd:sequence>
      		<xsd:element name="name" type="xsd:string" />
      	</xsd:sequence>
	</xsd:complexType>

	  <xsd:complexType name="VehicleContainer">
		<xsd:annotation>
      		<xsd:documentation xml:lang="en">The Vehicle Container implementation</xsd:documentation>
    	</xsd:annotation>
	    <xsd:complexContent>
	      <xsd:extension base="AbstractVehicleContainer">
	        <xsd:choice maxOccurs="unbounded">
	          <xsd:element name="car" type="Car" />
	          <xsd:element name="motorcycle" type="Motorcycle" />
	        </xsd:choice>
	      </xsd:extension>
	    </xsd:complexContent>
	</xsd:complexType>
	
	 <xsd:complexType name="VehicleHolder">
		<xsd:annotation>
      		<xsd:documentation xml:lang="en">The Vehicle Container implementation</xsd:documentation>
    	</xsd:annotation>
	    <xsd:complexContent>
	      <xsd:extension base="AbstractVehicleContainer">
	        <xsd:choice maxOccurs="1" minOccurs="1">
	          <xsd:element name="car" type="Car" />
	          <xsd:element name="motorcycle" type="Motorcycle" />
	        </xsd:choice>
	      </xsd:extension>
	    </xsd:complexContent>
	</xsd:complexType>
	
	
	<xsd:complexType name="Car">
		<xsd:sequence>
			<xsd:element name="registrationNumber" type="xsd:string" minOccurs="1"/>
			<xsd:element name="doors" type="xsd:int"  minOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="Motorcycle">
		<xsd:sequence>
			<xsd:element name="registrationNumber" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:element name="carRootElement" > <!-- JAXB needs root elements if you want to do round-trips -->
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="carElement"  type="Car"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>

